geom_text(aes(label = AccomR, vjust = -0.8, hjust = 0.5, color = obj), show_guide = FALSE)+
geom_bar(stat="identity") + coord_flip()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
ggplot(data=data, aes(x=reorder(City,AccomR), y=AccomR), fill=obj) +
geom_text(aes(label = AccomR, color = obj))+
geom_bar(stat="identity") + coord_flip()
library(ggplot2)
data<-read.csv("accom.csv")
ggplot(data=data, aes(x=reorder(City,AccomR), y=AccomR), fill=obj) +
geom_text(aes(label = AccomR)+
geom_bar(stat="identity") + coord_flip()
source('~/.active-rstudio-document')
ggplot(data=data, aes(x=reorder(City,AccomR), y=AccomR), fill=obj) +
geom_text(aes(label = AccomR))+
geom_bar(stat="identity") + coord_flip()
library(swirl)
swirl()
skip()
chat)
chat())
chat()
submit()
?cho12inv
??cho12inv
help(cho12inv)
?chol2inv
a<-1
a+1
a<-2
?source
objects()
rm(a)
x<-c(10.4,5.6,3.1,6.4)
x
c(x,x)
c(1, 2, 3) + c(2, 4, 6)
2 + c(1,2,3)
c(min(x),max(x))
range(x)
sum(x)/length(x)
var(x)
sd(x)
sort(x)
sqrt(-17)
sqrt(-17 + 0i)
20:40
2 * 1:10
seq(1,10)
?seq
example(seq)
seq(to = 10, from = 1)
seq(1, 10, by = 0.5)
seq(from=1,by=2,length.out=10)
rep(2, times = 10)
rep(x, times = 2)
rep(x, each = 2)
x.5
x>5
x > 5 & x < 10
is.na(x)
is.na(c(1,2,NA,3))
Inf + 1
is.na(c(NA, NaN, 1))
x
"x"
""
"/"
\""
"\"
"\""
"\"
\'
\'
"\"
"\"
"\""
"\""
paste("a", "b")
paste(c("X", "Y"), 1:10)
paste0(c("X", "Y"), 1:10)
x[c(1,3)]
x[x > 5]
x[-2]
names(x) <- c("a", "b", "c", "d")
x
x[c("b", "d")]
source('C:/Users/ASUS/AppData/Local/Temp/RtmpUp3RkN/RBasic-02-HW.R', encoding = 'UTF-8')
submit
submit()
source('C:/Users/ASUS/AppData/Local/Temp/RtmpUp3RkN/RBasic-02-HW.R', encoding = 'UTF-8')
submit()
library(swirl)
swirl()
install.packages(fplyr)
install.packages("dplyr")
library(dplyr)
vignette(package = "dplyr")
vignette("introduction", package = "dplyr")
install.packages("nycflights13")
library(nycflights13)
nrow(flights)
fliter(flights, month==1, day==1)
filter(flights, month==1, day==1)
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-01.R', encoding = 'UTF-8')
submit()
flights[flights$month=1]
fliter(flights, month=1, day=2)
filter(flights, month=1, day=2)
filter(flights, month==1, day==2)
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-02.R', encoding = 'UTF-8')
submit()
?grepl
filter(flights, grepl(pattern = "AA", x = tailnum, fixed = TRUE))
slice(flights,10000:20000)
arrange(flights, month, day, dep_time)
min(flights$dep_time)
min(flights$dep_time, na.rm = TRUE)
arrange(flights, desc(month), desc(day),
| desc(dep_time))
arrange(flights, desc(month), desc(day),desc(dep_time))
select(flights,year,month,day)
levels(flights)
select(flights, year:day)
select(flights, -(year:day)
select(flights, -(year:day))
select(flights, -(year:day))
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-03.R', encoding = 'UTF-8')
submit
submit()
submit()
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-03.R', encoding = 'UTF-8')
submit()
distinct(select(flights, year:day))
mutate(flights, gain = arr_delay - dep_delay)
summarise(flights, mean(dep_delay, na.rm =
| TRUE))
summarise(flights, mean(dep_delay, na.rm = TRUE))
sample_n(flights, 10)
sample_frac(flights, 0.01)
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-04.R', encoding = 'UTF-8')
submit()
answer04.1 <- local({summarise(flights, mean(gain, na.rm = TRUE))
# 請填寫你的程式碼。
})
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-04.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-04.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-04.R', encoding = 'UTF-8')
submit()
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-04.R', encoding = 'UTF-8')
submit()
df <- group_by(flights, month)
submit()
answer05
View(cl_info)
source('C:/Users/ASUS/AppData/Local/Temp/Rtmp44Yh6v/RDataEngineer-05-06.R', encoding = 'UTF-8')
submit()
library(swirl)
swirl()
bye()
swirl()
skip()
library(dplyr)
vignette("two-table", package = "dplyr")
install.packages(vignette("two-table", package = "dplyr"))
install.packages(nycflights13)
library(nycflights13)
view(airlines)
View(airlines)
?slice
?slice
slice(flights, 1)
?left_join
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-06-01.R', encoding = 'UTF-8')
submit()
View(weather)
answer02 <- left_join(answer01, weather
answer02 <- left_join(answer01, weather)
answer02 <- left_join(answer01, weather)
View(answer02)
View(answer01)
intersect(colnames(answer01), colnames(weather))
View(airports)
c("origin" = "faa")
answer03 <- left_join(answer02, airports, by = c("origin" = "faa"))
View(answer03)
answer04 <- left_join(answer03, airports, by = c("answer03$dest" = "irports$faa"))
answer04 <- left_join(answer03, airports, by = c("answer03$dest" = "airports$faa"))
answer04 <- left_join(answer03, airports, by = c("dest" = "faa"))
colnames(answer04)
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-06-02.R', encoding = 'UTF-8')
submit
submit()
view(answer02.3)
View(answer02.3)
View(df1)
View(df2)
wiki_join()
left_join(df1, df2)
right_join(df2, df1)
inner_join(df1, df2)
full_join(df1, df2)
anti_join(df1, df2)
View(df3)
View(df4)
inner_join(df3, df4)
semi_join(df3, df4)
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-06-HW.R', encoding = 'UTF-8')
submit()
skip()
library(dplyr)
vignette(package = "dplyr")
vignette("introduction", package = "dplyr")
skip()
library(nycflights13)
library(nycflights13)
nrow(flights)
head(flights)
filter(flights, month == 1, day == 1)
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-01.R', encoding = 'UTF-8')
submit()
filter(flights, flight$month==1, flights$day==1)
filter(flights, flights$month==1, flights$day==1)
filter(flights, month==1, day==2)
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-02.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-02.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-02.R', encoding = 'UTF-8')
submit()
?grepl
filter(flights, grepl(pattern = "AA", x = tailnum,fixed = TRUE))
slice(flights, 1:10000)
slice(flights, 10000:20000)
arrange(flights, month, day, dep_time)
min(flights$dep_time)
min(flights$dep_time, na.rm =TRUE
min(flights$dep_time, na.rm =TRUE)
min(flights$dep_time, na.rm =TRUE)
arrange(flights, desc(month), desc(day),desc(dep_time))
select(flights, year, month, day)
colnames(flights)
select(flights, year:day)
select(flights, -(year:day))
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-03.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-03.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-03.R', encoding = 'UTF-8')
submit()
distinct(select(flights, year:day))
mutate(flights, gain = arr_delay - dep_delay)
summarise(flights, mean(dep_delay, na.rm =TRUE))
sample_n(flights, 10)
sample_frac(flights, 0.01)
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-04.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-04.R', encoding = 'UTF-8')
submit
submit()
#' 這個資料集只要能和GDP做比較，就是一個我國房地產泡沫化的指標
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-04.R', encoding = 'UTF-8')
submit()
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-04.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-04.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-04.R', encoding = 'UTF-8')
submit()
df <- group_by(flights, month)
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-05.R', encoding = 'UTF-8')
submit()
answer05
View(cl_info)
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgbLTwV/RDataEngineer-05-06.R', encoding = 'UTF-8')
submit()
submit()
View(cl_info)
View(cl_info_year)
library(swirl)
swirl
swirl()
?plot
?infert
View(infert)
spon<-infert$spontaneous
list()
plot(spon)
spon <- factor(spon)
plot(spon)
table(spon)
pie(table(spon))
age<-infert$age
list
plot(age)
plot(age, type = "l")
x<-hist(age)
x
sum(age > 26 & age <= 28)
?cut
cut(1:10, 2:4)
plot(cut(age, breaks = x$breaks))
infert$education
plot(density(age))
plot(density(age, bw=0.1))
plot(density(age, bw=1))
plot(density(age, bw="SJ"))
sunspot.year
list()
plot(sunspot.year)
x <- tail(sunspot.year, 100)
mode(x)
plot(x)
lines(x)
lines(x, lty=3, lwd=3, col=2)
dst <- tempfile(fileext = ".png")
png(dst)
plot(x)
dev.off()
skip()
View(hsb)
plot(density(hsb$write, bw = "SJ"))
pie(table(hsb(sex)))
pie(table(hsb$sex))
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-01-pie.R', encoding = 'UTF-8')
submit()
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-01-hist.R', encoding = 'UTF-8')
submit()
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-01-density.R', encoding = 'UTF-8')
submit()
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-01-plot.ts.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-01-plot.ts.R', encoding = 'UTF-8')
submit()
View(hsb)
tab1 <- table(hsb$sex, hsb$schtyp)
barplot(tab1, legend=TRUE)
barplot(tab1, legend=TRUE, beside = TRUE, args.legend=list(x=3, y=90))
skip()
library(dplyr)
dat2 <- summarise(group_by(hsb, sex, schtyp), math.avg=mean(math))
tab2 <- xtabs(formula =math.avg ~ sex + schtyp , data = dat2)
barplot(tab2, beside = TRUE, ylim = c(50, 58), xpd = FALSE)
dat2
tab2
dat3 <- summarise(group_by(hsb, race), read.med=median(read))
barplot(dat3$read.med, names.arg=dat3$race, horiz = TRUE)
dotchart(dat3$read.med, labels = dat3$race)
plot(math ~ race, data=hsb)
?boxplot
boxplot(math ~ schtyp, data=hsb, col=c("darkblue", "gold")
boxplot(math ~ schtyp, data=hsb, col=c("darkblue", "gold")
boxplot(math ~ schtyp, data=hsb, col=c("darkblue", "gold"))
legend("topleft", c("private", "public"), fill=c("darkblue", "gold"))
plot(x=hsb$math, y=hsb$read)
plot(read~math, data=hsb)
plot(~read+math, data=hsb)
plot(~read+math+science+socst,data=hsb, main="HSB score")
col.sex <- ifelse(hsb$sex=="male", "#e34a3355", "#2c7fb855")
pch.schtyp <- ifelse(hsb$schtyp=="public", 1, 19)
cex.science <- (hsb$science-25)/(50)*5
plot(~read+math, data=hsb, col=col.sex, pch=pch.schtyp, cex=cex.science)
check_then_install("ggplot2", "2.0.0")
library(ggplot2)
g <- ggplot(infert, aes(x = education))
g + geom_bar()
?geom_bar
g + geom_bar(aes(fill = education))
g + geom_bar(aes(fill = "purple"))
g<-ggplot(hsb)
g + geom_bar(aes(x = sex))
geom_bar(aes(x = sex, fill = race))
g+geom_bar(aes(x = sex, fill = race))
g+geom_bar(aes(x = sex, fill = race),position="dodge")
skip()
library(dplyr)
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-03-01.R', encoding = 'UTF-8')
submit()
ggplot(answer01, aes(x = sex)) + geom_bar()
ggplot(answer01, aes(x = sex, y=count)) + geom_bar()
ggplot(answer01, aes(x = sex, y=count)) + geom_bar(stat=identity)
ggplot(answer01, aes(x = sex, y=count)) + geom_bar(stat="identity")
summarise(group_by(hsb,sex),count=n()
summarise(group_by(hsb,sex),count=n())
summarise(group_by(hsb,sex),count=n())
ggplot(hsb, aes(x = math)) + geom_density()
ggplot(hsb, aes(x = math, color=sex)) + geom_density()
ggplot(hsb, aes(x = read, color=race)) + geom_density()
?geom_density
dat2 <- summarise(group_by(hsb, sex, schtyp),math.avg = mean(math))
g <- ggplot(dat2, aes(x = sex, y = math.avg, fill = schtyp))
g2 <- g + geom_bar(stat = "identity", position = "dodge")
g2
g2 + coord_cartesian(ylim=c(40,60))
g3 <- g + geom_point(aes(color = schtyp), size= 10)
g3
g3 + coord_flip()
g<- ggplot(hsb, aes(x = sex, y = math, fill =schtyp))
g + geom_boxplot()
g + geom_boxplot(aes(linetype = race))
g <- ggplot(hsb, aes(x = math, y = read))
g + geom_point()
g + geom_point(aes(size = science, pch = schtyp, color = sex))
cb7 <- c("#000000", "#E69F00", "#56B4E9","#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
g <- ggplot(hsb, aes(x = sex, fill = race)) + geom_bar()
g
g + scale_fill_manual(values=cb7)
g + theme_minimal()
dst <-tempfile(fileext = ".png")
ggsace(dst)
ggsave(dst)
g <- ggplot(hsb, aes(x = read, y = math)) +geom_point()
g + facet_grid(. ~ race)
install.packages("GGally")
library(GGally)
ggpairs(hsb, 7:10)
head(population)
skip()
hw_01
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-03-HW-01.R', encoding = 'UTF-8')
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-03-HW-01.R')
submit
submit()
hw02()
hw_02()
hw_02
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-03-HW-02.R')
submit
submit()
hw_03
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-03-HW-03.R')
hw_03
submit()
hw_04
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-03-HW-04.R')
submit()
install.packages("googleVis")
library(googleVis)
vignette("googleVis_examples", package = "googleVis")
skip()
library(dplyr)
dat1 <- group_by(hsb, race, sex) %>% summarise(math.avg =mean(math))
g <- gvisBarChart(dat1)
plot(g)
skip()
library(reshape2)
dcast(dat1, race ~ sex)
dcast(dat1, race ~ sex) %>% gvisBarChart() %>% plot()
select(hsb, read, math) %>% gvisScatterChart() %>% plot()
gvisSankey(dat_sk) %>% plot()
gvisCalendar(TWII) %>% plot
gvisOrgChart(Regions) %>%plot
Regions
library(ggmap)
View(eq)
twmap <- try(get_map("Taiwan", 3), silent = TRUE)
skip()
g <- ggmap(twmap, extent = "device")
g
g + geom_point(aes(x = longitude, y = latitude), data =eq)
g + geom_point(aes(x = longitude, y = latitude, size =
| mag), data = eq)
g + geom_point(aes(x = longitude, y = latitude, size =mag), data = eq)
source('C:/Users/ASUS/AppData/Local/Temp/RtmpgNyYfr/RVisualization-04-HW.R')
submit
submit()
X<-rnorm(50)
y<-rnorm(x)
plot(x,y)
data()
object()
objects()
rm(x)
objects()
rm(x)
rm("x")
objects()
ls(x)
ls
Is
Is()
ls
ls()
install.packages("Rcmdr")
install.packages('DSC2014Tutorial', repo = c('http://taiwanrusergroup.github.io/R', "http://cran.csie.ntu.edu.tw"), type = 'win.binary')
con <- url("http://www.ntu.edu.tw/")
htmlCode <-readLines(con)
htmlCode
library(httr)
html <- htmlParse(GET("http://www.ntu.edu.tw/"))
install.packages("httr")
library(httr)
html <- htmlParse(GET("http://www.ntu.edu.tw/"))
library(xml)
library(XML)
library(xml2)
library(httr)
html <- htmlParse(GET("http://www.ntu.edu.tw/"))
install.packages("XML")
library(httr)
html <- htmlParse(GET("http://www.ntu.edu.tw/"))
library(XML)
install.packages("XML")
install.packages("XML")
library(XML)
require(XML)
install.packages("XML")
require(XML)
library(XML)
require("XML")
install.packages("XML")
install.packages("C:/Users/ASUS/Downloads/XML_3.98-1.9.tar.gz", repos = NULL, type = "source")
library(XML)
install.packages("C:/Users/ASUS/Downloads/XML_3.98-1.9.zip", repos = NULL, type = "win.binary")
install.packages("XML")
install.packages("XML")
install.packages("C:/Users/ASUS/Downloads/XML_3.98-1.9.zip", repos = NULL, type = "win.binary")
check_then_install("xml")
check_then_install("XML")
library(XML)
