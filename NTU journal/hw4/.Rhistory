old <- theme_set(theme_bw())
#看不同性別數學分數的盒鬚圖
p1<-ggplot(data = redata, aes(x = Region,
y = Disabled.Aged.Beds.of.every.millon.people)) +
geom_boxplot() + coord_flip() +
labs( y = 'Region', x = 'beds',
title = 'Mathematical Score Box')
p1
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
swirl()
library(swirl)
swirl()
source("http://wush978.github.io/R/init-swirl.R")
library(swirl)
source("http://wush978.github.io/R/init-swirl.R")
remove.packages("swirl", lib="~/R/win-library/3.3")
source("http://wush978.github.io/R/init-swirl.R")
source("http://wush978.github.io/R/init-swirl.R")
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
source("http://wush978.github.io/R/init-swirl.R")
local({
check_package <- function(pkg) {
if (!suppressWarnings(suppressMessages(require(pkg, character.only = TRUE)))) {
install.packages(pkg, repos = "http://wush978.github.io/R")
}
}
lapply(c("rappdirs", "bitops", "curl"), check_package)
utils::install.packages("swirl", repos = "http://wush978.github.io/R")
})
library(swirl)
library(curl)
library(methods)
# Sorry, server.datascienceandr.org is down and will not recover
# install_course_url("http://server.datascienceandr.org/swirl/DataScienceAndR.zip")
download.file("https://github.com/wush978/DataScienceAndR/archive/course.zip", tmp.file <- tempfile(fileext = ".zip"))
unzip(tmp.file, exdir = tempdir())
file.rename(file.path(tempdir(), "DataScienceAndR-course"), file.path(tempdir(), "DataScienceAndR"))
swirl::install_course_directory(file.path(tempdir(), "DataScienceAndR"))
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
remove.packages("swirl", lib="~/R/win-library/3.3")
source("http://wush978.github.io/R/init-swirl.R")
install_course_url("https://wush978.github.io/R/course/DataScienceAndR.zip")
source("http://wush978.github.io/R/init-swirl.R")
swirl()
mode(x)
length(x)
?g
??g
mode(g)
length(g)
g[1:2]
list(1,a=2)
g[[1]]
mode(g[[1]])
length(g[[1]])
g[[10]]
mode(g[[10]])
g[["coefficients"]]
length(x) <- 10
x
x[7]<-7
x
x[13]<-13
x
x2 <- x[c(1,3,5,7,9,11,13)]
x2
attributes(g)
names(g)
attr(g, "names")
attr(g, "class")
names(g)
class(g)
submit()
source('C:/Users/user/AppData/Local/Temp/Rtmpgp1IKH/RBasic-03-HW.R', encoding = 'UTF-8')
submit()
library(swirl)
swirl()
blood_type
blood_type_factor <- factor(blood_type)
blood_type_factor
levels(blood_type_factor)
blood_type_factor[5] <- "C"
blood_type_factor
str(blood_type_factor)
blood_type_factor[1]> blood_type_factor[2]
grades
grades_factor <- factor(grades, ordered = TRUE, levels = c("C","B","A"))
grades_factor
grades_factor[1]>grades_factor[2]
species <- iris$Species
levels(species)
levels(co2$Plant)
plant <- CO2$Plant
levels(Plant)
levels(plant)
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-04-HW.R', encoding = 'UTF-8')
source()
submit()
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-04-HW.R', encoding = 'UTF-8')
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-04-HW.R', encoding = 'UTF-8')
submit()
numeric<-c(1:18)
x<-matrix(1:18, 6,3)
?matrix
x
attr(x)
?x
//x
??x
levels(x)
attributes(x)
dim(x)
dim(x) <- c(3, 6)
x
dim(x) <- c(3, 3, 2)
x
array(1:18, c(3, 3, 2))
x
x2<-x[,,2]
x2
x2[1,]
x[1,,2]
x
x[1,1,1]<-2
x[1,1,1]
x[,1,1]
x[,1,1]<-3
x[,,1]
x[,,1]
x[,,2]
x[,,1] + x[,,2]
x[,,1]+1
matrix(1:4, 2, 2) + 1:2
attributes(x)
dim(x)<-NULL
X
X
x
cbind(matrix(1:4, 2, 2), matrix(1:4, 2,2))
rbind(matrix(1:4, 2, 2), matrix(1:4, 2,2))
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-05-HW.R', encoding = 'UTF-8')
submit()
x <- list(iris = iris, cars = cars, n = 2)
x[[]]
x[[3]]
attributes(x[[3]])
mode(x[3])
x[['n']]
x$n
a<-data.frame(class = "NTU", id = 1:10,scores = matrix(c(80:99),nrow=10,ncol=2 ) )
a[,1]
a[1,2]
colnames(a)
a[2,"id"]
a[1:2,1:2]
class(a[1:2,1:2])
a[1:2, "id",
| drop = FALSE]
a[1:2, "id", drop = FALSE]
co2
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-06-HW.R', encoding = 'UTF-8')
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-06-HW.R', encoding = 'UTF-8')
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-06-HW.R', encoding = 'UTF-8')
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-06-HW.R', encoding = 'UTF-8')
submit
submit()
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-06-HW.R', encoding = 'UTF-8')
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-06-HW.R', encoding = 'UTF-8')
submit()
library(help=datasets)
attitide
attitude
iris<-1
data(iris,package = "datasets")
head(iris)
levels(iris)
colnames(iris)
help("iris")
help(iris)
eadBin(lvr_land.path, what = "raw", n = 3)
readBin(lvr_land.path, what = "raw", n = 3)
readLines(file(lvr_land.path, encoding = BIG5"), n = 1)
readLines(file(lvr_land.path, encoding = BIG5"), n = 1)
readLines(file(lvr_land.path, encoding = BIG5"), n = 1)
readLines(file(lvr_land.path, encoding = "BIG5"), n = 1)
readLines(file(lvr_land.path, encoding = "BIG5"), n = 5)
lvr_land.info <- file.info(lvr_land.path)
class(lvr_land.info)
colnames(lvr_land.info)
1
lvr_land.info$size
lvr_land.bin <- readBin(lvr_land.path, what = "raw", n = lvr_land.info$size)
library(stringi)
lvr_land.txt <- stri_encode(lvr_land.bin, "BIG-5", "UTF-8")
read.table(lvr_land.path, fileEncoding = "BIG-5")
read.table(lvr_land.path, fileEncoding = "BIG-5")
lvr_land <- read.table(file(lvr_land.path, encoding = "BIG5"), header = TRUE, sep = ",")
l10n_info()
read.table(textConnection(lvr_land.txt), header = TRUE, sep = ",")
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-07-HW.R', encoding = 'UTF-8')
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RBasic-07-HW.R', encoding = 'UTF-8')
submit()
readBin(hospital_path, "raw", n = 3L)
readLines(file(hospital_path, encoding = "UTF-8"), n = 6)
readLines(file(hospital_path, encoding = "BIG5"), n = 6)
hospital<-read.table(hospital_path,sep = ",",header = TRUE)
hospital$YEARYY
?substring
substring(head(hospital$YEARYY), 1, 3)
?strsplit
yearyy <- as.character(hospital$YEARYY)
tmp <- strsplit(yearyy, "Q")
head(tmp)
tmp[[1]][1]
length(tmp)
?lapply
lapply(tmp,"[",1)
lapply(tmp,"[",2)
tmp2 <- lapply(tmp, "[", 1)
unlist(tmp2)
sapply(tmp, "[", 1)
Lapply(tmp, "[", 1)
lapply(tmp, "[", 1)
pirate_info <- readLines(file(pirate_path, encoding = "BIG5"))
pirate_info
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RDataEngineer-01-HW.R', encoding = 'UTF-8')
submit()
install.packages(xml2)
library(xml2)
x1
?read_xml
doc1 <- read_xml(x1)
doc1
mode(doc1)
class(doc1)
?xml_find_all
xml_find_all(doc1, "/a/b")
xml_find_all(doc1, "/b")
ns <- xml_find_all(doc1, "/a/c")
mode(ns)
class(ns)
n1<-ns[[1]]
xml_text(n1)
xml_parent(n1)
n2 <- ns[[2]]
xml_text(n2)
a <- xml_find_one(doc1, "/a")
xml_text(a)
xml_contents(a)
xml_children(a)
xml_attrs(n1)
xml_attrs(n2)
xml_find_all(doc1, "/a/c[@class]")
xml_find_all(doc1, "/a/c[@class='g']")
readLines(tender_path, n = 100)
tender <- read_html(tender_path)
source('C:/Users/user/AppData/Local/Temp/RtmpchyUgc/RDataEngineer-02-HW.R', encoding = 'UTF-8')
submit()
library(swirl)
swirl()
cat(facebook_error, sep = "\n")
install.packages(jsonlite)
install.packages(jsonlite)
install.packages("jsonlite")
install.packages("jsonlite")
library(jasonlite)
library(jsonlite)
library(jsonlite)
install.packages("jsonlite")
library(jsonlite)
library(jsonlite)
library(swirl)
swirl()
library(jsonlite)
vignette(package = "jsonlite")]
vignette(package = "jsonlite")
vignette("json-aaquickstart","jsonlite")
fromJSON(x1,simplifyVector = FALSE)
fromJSON(x1)
source('C:/Users/user/AppData/Local/Temp/Rtmps1wC6v/RDataEngineer-03-HW.R', encoding = 'UTF-8')
submit()
install.packages("RSQLite")
library(RSQLite)
install.packages("DBI")
install.packages("DBI")
drv <- dbDriver("SQLite")
library(RSQLite)
install.packages("DBI")
install.packages("DBI")
library(RSQLite)
library(DBI)
library(RSQLite)
drv <- dbDriver("SQLite")
library(swirl)
swirl()
library(DBI)
library(swirl)
drv <- dbDriver("SQLite")
db <- dbConnect(drv, db_path)
?dbWriteTable
help.search("dbWriteTable")
skip()
head(lvr_land)
dbWriteTable(db, "lvr_land2", lvr_land)
dbReadTable(db, "lvr_land2")
dbWriteTable(db, "lvr_land2", lvr_land, append =TRUE)
dbReadTable(db, "lvr_land2")
dbListTables(db)
iris2 <- dbReadTable(db,iris")
iris2 <- dbReadTable(db,"iris")
iris2 <- dbReadTable(db, "iris")
all.equal(iris, iris2)
dbGetQuery(db, "SELECT * FROM iris WHERE species = \"virginica\"")
rs <- dbSendQuery(db, "SELECT * FROM iris")
fetch(rs,1)
fetch(rs,1)
dbClearResult(rs)
dbDisconnect(db)
db <- dbConnect(drv, db_path)
dbBegin(db)
dbRemoveTable(db, "CO2")
dbListTables(db)
dbDisconnect(db)
db <- dbConnect(drv, db_path)
dbListTables(db)
dbBegin(db)
dbRemoveTable(db, "CO2")
dbCommit(db)
dbListTables(db)
source('C:/Users/user/AppData/Local/Temp/RtmpITvYHK/RDataEngineer-04-HW.R', encoding = 'UTF-8')
submit
submit()
install.packages("dplyr")
library(dplyr)
vignette(package = "dplyr")
vignette("introduction", package = "dplyr")
install.packages("nycflights13")
library(nycflights13)
size$flights
nrow(flughts)
nrow(flights)
filter(flights, month == 1, day == 1)
library(swirl)
swirl
swirl()
bye()
swirl()
skip()
library(dplry)
library(dplyr)
vignette("two-table", package = "dplyr")
skip()
library(nycflights13)
View(airlines)
slice(flights, 1)
?left_join
source('C:/Users/user/AppData/Local/Temp/RtmpcvQRoG/RDataEngineer-06-01.R', encoding = 'UTF-8')
submit()
view(weather)
View(weather)
nswer02 <- left_join(answer01, weather)
answer02 <- left_join(answer01, weather)
View(answer02)
install.packages("Rfacebook")
token<-4d7e739cf5c12acca2cc5adbeaaa23f0
token <- 4d7e739cf5c12acca2cc5adbeaaa23f0
library(Rfacebook)
token <- 4d7e739cf5c12acca2cc5adbeaaa23f0
install.packages("devtools")
library(devtools)
install_github("Rfacebook", "pablobarbera", subdir="Rfacebook")
library(Rfacebook)
token <- 4d7e739cf5c12acca2cc5adbeaaa23f0
token <- "4d7e739cf5c12acca2cc5adbeaaa23f0"
me <- getUsers("me", token, private_info = TRUE)
me$name
me <- getUsers("me", token, private_info = TRUE)
token <- "9c699b5c1bf376d79322c241bf53d026"
me <- getUsers("me", token, private_info = TRUE)
token <- "EAACEdEose0cBAJY4tpXHhDkA0WJ5WFaoaHyftP7j2pO4qRTt9fLzm59NYWjoD6hqcqkLEXoYdDex8nFhy2YEBCeld5g8yz37cGgL8o6BWLyJg6LD5K6AMhsowDMJsxa3ICUWn56Ar3SakGi95rFTHiZBNrHiqpxFFyVChPuftjLJLOdZBG3WNPs3WMmwUZD"
me <- getUsers("me", token, private_info = TRUE)
me$name
require("Rfacebook")
fb.oauth <- fbOAuth(
app_id="500733913606223",
app_secret="9c699b5c1bf376d79322c241bf53d026",
extended_permissions = TRUE)
me$name
me <- getUsers("me",token=fb.oauth)
me$name
require("Rfacebook")
fb.oauth <- fbOAuth(
app_id="500733913606223",
app_secret="9c699b5c1bf376d79322c241bf53d026",
extended_permissions = TRUE)
library("httr", lib.loc="~/R/win-library/3.3")
upgrade("httr")
update.packages("httr")
update.packages()
require("Rfacebook")
fb.oauth <- fbOAuth(
app_id="500733913606223",
app_secret="9c699b5c1bf376d79322c241bf53d026",
extended_permissions = TRUE)
detach("package:Rfacebook", unload=TRUE)
detach("package:httr", unload=TRUE)
update.packages()
y
remove.packages("httr", lib="~/R/win-library/3.3")
install.packages("httr")
install.packages("httr")
require("Rfacebook")
fb.oauth <- fbOAuth(
app_id="500733913606223",
app_secret="9c699b5c1bf376d79322c241bf53d026",
extended_permissions = TRUE)
library("Rfacebook", lib.loc="~/R/win-library/3.3")
extended_permissions = TRUE)
require("Rfacebook")
fb.oauth <- fbOAuth(
app_id="500733913606223",
app_secret="9c699b5c1bf376d79322c241bf53d026",
extended_permissions = TRUE)
library("Rfacebook")
install.packages("Rcpp")
require("Rfacebook")
fb.oauth <- fbOAuth(
app_id="500733913606223",
app_secret="9c699b5c1bf376d79322c241bf53d026",
extended_permissions = TRUE)
page.id <- "489529864441673" # G.T.Wang 粉絲專頁
page <- getPage(page.id, token, n = 300)
str(page)
page.id <- "hbrtaiwan" #
page <- getPage(page.id, token, n = 300)
str(page)
## convert Facebook date format to R date format
format.facebook.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
}
# aggregate metric counts over month
aggregate.metric <- function(metric) {
m <- aggregate(page[[paste0(metric, "_count")]], list(month = page$month),
mean)
m$month <- as.Date(paste0(m$month, "-15"))
m$metric <- metric
return(m)
}
# create data frame with average metric counts per month
page$datetime <- format.facebook.date(page$created_time)
page$month <- format(page$datetime, "%Y-%m")
df.list <- lapply(c("likes", "comments", "shares"), aggregate.metric)
df <- do.call(rbind, df.list)
# visualize evolution in metric
library(ggplot2)
library(scales)
ggplot(df, aes(x = month, y = x, group = metric)) +
geom_line(aes(color = metric)) +
scale_y_log10("Average count per post",
breaks = c(2, 10, 50, 100)) +
theme_bw() +
theme(axis.title.x = element_blank())
install.packages("digets")
install.packages("digest")
## convert Facebook date format to R date format
format.facebook.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
}
# aggregate metric counts over month
aggregate.metric <- function(metric) {
m <- aggregate(page[[paste0(metric, "_count")]], list(month = page$month),
mean)
m$month <- as.Date(paste0(m$month, "-15"))
m$metric <- metric
return(m)
}
# create data frame with average metric counts per month
page$datetime <- format.facebook.date(page$created_time)
page$month <- format(page$datetime, "%Y-%m")
df.list <- lapply(c("likes", "comments", "shares"), aggregate.metric)
df <- do.call(rbind, df.list)
# visualize evolution in metric
library(ggplot2)
library(scales)
ggplot(df, aes(x = month, y = x, group = metric)) +
geom_line(aes(color = metric)) +
scale_y_log10("Average count per post",
breaks = c(2, 10, 50, 100)) +
theme_bw() +
theme(axis.title.x = element_blank())
